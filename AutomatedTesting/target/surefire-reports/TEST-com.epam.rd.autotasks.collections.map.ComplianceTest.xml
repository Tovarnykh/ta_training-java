<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.epam.rd.autotasks.collections.map.ComplianceTest" time="3.073" tests="5" errors="0" skipped="0" failures="3">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="D:\Java\ta_training-java\AutomatedTesting\target\test-classes;D:\Java\ta_training-java\AutomatedTesting\target\classes;C:\Users\milas\.m2\repository\com\tngtech\archunit\archunit-junit5\1.2.1\archunit-junit5-1.2.1.jar;C:\Users\milas\.m2\repository\com\tngtech\archunit\archunit-junit5-api\1.2.1\archunit-junit5-api-1.2.1.jar;C:\Users\milas\.m2\repository\com\tngtech\archunit\archunit-junit5-engine\1.2.1\archunit-junit5-engine-1.2.1.jar;C:\Users\milas\.m2\repository\com\tngtech\archunit\archunit\1.2.1\archunit-1.2.1.jar;C:\Users\milas\.m2\repository\com\tngtech\archunit\archunit-junit5-engine-api\1.2.1\archunit-junit5-engine-api-1.2.1.jar;C:\Users\milas\.m2\repository\fr\inria\gforge\spoon\spoon-core\10.4.2\spoon-core-10.4.2.jar;C:\Users\milas\.m2\repository\org\eclipse\jdt\org.eclipse.jdt.core\3.33.0\org.eclipse.jdt.core-3.33.0.jar;C:\Users\milas\.m2\repository\org\eclipse\jdt\ecj\3.33.0\ecj-3.33.0.jar;C:\Users\milas\.m2\repository\com\martiansoftware\jsap\2.1\jsap-2.1.jar;C:\Users\milas\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\milas\.m2\repository\commons-io\commons-io\2.14.0\commons-io-2.14.0.jar;C:\Users\milas\.m2\repository\org\apache\maven\maven-model\3.6.0\maven-model-3.6.0.jar;C:\Users\milas\.m2\repository\org\codehaus\plexus\plexus-utils\3.1.0\plexus-utils-3.1.0.jar;C:\Users\milas\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\milas\.m2\repository\org\apache\commons\commons-compress\1.24.0\commons-compress-1.24.0.jar;C:\Users\milas\.m2\repository\org\jspecify\jspecify\0.3.0\jspecify-0.3.0.jar;C:\Users\milas\.m2\repository\org\apache\maven\shared\maven-invoker\3.2.0\maven-invoker-3.2.0.jar;C:\Users\milas\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.3.4\maven-shared-utils-3.3.4.jar;C:\Users\milas\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\milas\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.0\junit-jupiter-engine-5.9.0.jar;C:\Users\milas\.m2\repository\org\junit\platform\junit-platform-engine\1.9.0\junit-platform-engine-1.9.0.jar;C:\Users\milas\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\milas\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.0\junit-jupiter-api-5.9.0.jar;C:\Users\milas\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\milas\.m2\repository\org\junit\platform\junit-platform-commons\1.9.0\junit-platform-commons-1.9.0.jar;C:\Users\milas\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.0\junit-jupiter-params-5.9.0.jar;C:\Users\milas\.m2\repository\org\junit\platform\junit-platform-launcher\1.9.0\junit-platform-launcher-1.9.0.jar;C:\Users\milas\.m2\repository\org\slf4j\slf4j-simple\1.7.36\slf4j-simple-1.7.36.jar;C:\Users\milas\.m2\repository\org\apache\bcel\bcel\6.6.1\bcel-6.6.1.jar;C:\Users\milas\.m2\repository\ch\qos\logback\logback-classic\1.4.4\logback-classic-1.4.4.jar;C:\Users\milas\.m2\repository\ch\qos\logback\logback-core\1.4.4\logback-core-1.4.4.jar;C:\Users\milas\.m2\repository\org\mockito\mockito-core\4.8.0\mockito-core-4.8.0.jar;C:\Users\milas\.m2\repository\net\bytebuddy\byte-buddy\1.12.14\byte-buddy-1.12.14.jar;C:\Users\milas\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.14\byte-buddy-agent-1.12.14.jar;C:\Users\milas\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\milas\.m2\repository\org\hamcrest\hamcrest-library\2.2\hamcrest-library-2.2.jar;C:\Users\milas\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\milas\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-java\4.23.0\selenium-java-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-api\4.23.0\selenium-api-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-chrome-driver\4.23.0\selenium-chrome-driver-4.23.0.jar;C:\Users\milas\.m2\repository\com\google\auto\service\auto-service-annotations\1.1.1\auto-service-annotations-1.1.1.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-chromium-driver\4.23.0\selenium-chromium-driver-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-json\4.23.0\selenium-json-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-manager\4.23.0\selenium-manager-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-devtools-v125\4.23.0\selenium-devtools-v125-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-devtools-v126\4.23.0\selenium-devtools-v126-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-devtools-v127\4.23.0\selenium-devtools-v127-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-devtools-v85\4.23.0\selenium-devtools-v85-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-edge-driver\4.23.0\selenium-edge-driver-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\4.23.0\selenium-firefox-driver-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-http\4.23.0\selenium-http-4.23.0.jar;C:\Users\milas\.m2\repository\dev\failsafe\failsafe\3.3.2\failsafe-3.3.2.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-ie-driver\4.23.0\selenium-ie-driver-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\4.23.0\selenium-remote-driver-4.23.0.jar;C:\Users\milas\.m2\repository\com\google\guava\guava\33.2.1-jre\guava-33.2.1-jre.jar;C:\Users\milas\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\milas\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\milas\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\milas\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\milas\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\semconv\opentelemetry-semconv\1.25.0-alpha\opentelemetry-semconv-1.25.0-alpha.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-api\1.40.0\opentelemetry-api-1.40.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-context\1.40.0\opentelemetry-context-1.40.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-exporter-logging\1.40.0\opentelemetry-exporter-logging-1.40.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-sdk-common\1.40.0\opentelemetry-sdk-common-1.40.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-sdk-extension-autoconfigure-spi\1.40.0\opentelemetry-sdk-extension-autoconfigure-spi-1.40.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-sdk-extension-autoconfigure\1.40.0\opentelemetry-sdk-extension-autoconfigure-1.40.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-api-incubator\1.40.0-alpha\opentelemetry-api-incubator-1.40.0-alpha.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-sdk-trace\1.40.0\opentelemetry-sdk-trace-1.40.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-sdk\1.40.0\opentelemetry-sdk-1.40.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-sdk-metrics\1.40.0\opentelemetry-sdk-metrics-1.40.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-sdk-logs\1.40.0\opentelemetry-sdk-logs-1.40.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-os\4.23.0\selenium-os-4.23.0.jar;C:\Users\milas\.m2\repository\org\apache\commons\commons-exec\1.4.0\commons-exec-1.4.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-safari-driver\4.23.0\selenium-safari-driver-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-support\4.23.0\selenium-support-4.23.0.jar;C:\Users\milas\.m2\repository\io\github\bonigarcia\webdrivermanager\5.9.2\webdrivermanager-5.9.2.jar;C:\Users\milas\.m2\repository\com\google\code\gson\gson\2.11.0\gson-2.11.0.jar;C:\Users\milas\.m2\repository\com\google\errorprone\error_prone_annotations\2.27.0\error_prone_annotations-2.27.0.jar;C:\Users\milas\.m2\repository\com\github\docker-java\docker-java\3.4.0\docker-java-3.4.0.jar;C:\Users\milas\.m2\repository\com\github\docker-java\docker-java-core\3.4.0\docker-java-core-3.4.0.jar;C:\Users\milas\.m2\repository\com\github\docker-java\docker-java-api\3.4.0\docker-java-api-3.4.0.jar;C:\Users\milas\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.30\jcl-over-slf4j-1.7.30.jar;C:\Users\milas\.m2\repository\com\github\docker-java\docker-java-transport-httpclient5\3.4.0\docker-java-transport-httpclient5-3.4.0.jar;C:\Users\milas\.m2\repository\com\github\docker-java\docker-java-transport\3.4.0\docker-java-transport-3.4.0.jar;C:\Users\milas\.m2\repository\net\java\dev\jna\jna\5.13.0\jna-5.13.0.jar;C:\Users\milas\.m2\repository\org\brotli\dec\0.1.2\dec-0.1.2.jar;C:\Users\milas\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.2.1\httpclient5-5.2.1.jar;C:\Users\milas\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2\httpcore5-5.2.jar;C:\Users\milas\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2\httpcore5-h2-5.2.jar;C:\Users\milas\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.3\jackson-databind-2.12.3.jar;C:\Users\milas\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.3\jackson-annotations-2.12.3.jar;C:\Users\milas\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.3\jackson-core-2.12.3.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Warsaw"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="GB"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-17.0.1\bin"/>
    <property name="sun.java.command" value="C:\Users\milas\AppData\Local\Temp\surefire14975596003921228554\surefirebooter3504674614464565468.jar C:\Users\milas\AppData\Local\Temp\surefire14975596003921228554 2024-08-13T13-17-45_581-jvmRun1 surefire13918174357564655871tmp surefire_07134607161538050669tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="D:\Java\ta_training-java\AutomatedTesting\target\test-classes;D:\Java\ta_training-java\AutomatedTesting\target\classes;C:\Users\milas\.m2\repository\com\tngtech\archunit\archunit-junit5\1.2.1\archunit-junit5-1.2.1.jar;C:\Users\milas\.m2\repository\com\tngtech\archunit\archunit-junit5-api\1.2.1\archunit-junit5-api-1.2.1.jar;C:\Users\milas\.m2\repository\com\tngtech\archunit\archunit-junit5-engine\1.2.1\archunit-junit5-engine-1.2.1.jar;C:\Users\milas\.m2\repository\com\tngtech\archunit\archunit\1.2.1\archunit-1.2.1.jar;C:\Users\milas\.m2\repository\com\tngtech\archunit\archunit-junit5-engine-api\1.2.1\archunit-junit5-engine-api-1.2.1.jar;C:\Users\milas\.m2\repository\fr\inria\gforge\spoon\spoon-core\10.4.2\spoon-core-10.4.2.jar;C:\Users\milas\.m2\repository\org\eclipse\jdt\org.eclipse.jdt.core\3.33.0\org.eclipse.jdt.core-3.33.0.jar;C:\Users\milas\.m2\repository\org\eclipse\jdt\ecj\3.33.0\ecj-3.33.0.jar;C:\Users\milas\.m2\repository\com\martiansoftware\jsap\2.1\jsap-2.1.jar;C:\Users\milas\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\milas\.m2\repository\commons-io\commons-io\2.14.0\commons-io-2.14.0.jar;C:\Users\milas\.m2\repository\org\apache\maven\maven-model\3.6.0\maven-model-3.6.0.jar;C:\Users\milas\.m2\repository\org\codehaus\plexus\plexus-utils\3.1.0\plexus-utils-3.1.0.jar;C:\Users\milas\.m2\repository\org\apache\commons\commons-lang3\3.13.0\commons-lang3-3.13.0.jar;C:\Users\milas\.m2\repository\org\apache\commons\commons-compress\1.24.0\commons-compress-1.24.0.jar;C:\Users\milas\.m2\repository\org\jspecify\jspecify\0.3.0\jspecify-0.3.0.jar;C:\Users\milas\.m2\repository\org\apache\maven\shared\maven-invoker\3.2.0\maven-invoker-3.2.0.jar;C:\Users\milas\.m2\repository\org\apache\maven\shared\maven-shared-utils\3.3.4\maven-shared-utils-3.3.4.jar;C:\Users\milas\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\milas\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.0\junit-jupiter-engine-5.9.0.jar;C:\Users\milas\.m2\repository\org\junit\platform\junit-platform-engine\1.9.0\junit-platform-engine-1.9.0.jar;C:\Users\milas\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\milas\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.0\junit-jupiter-api-5.9.0.jar;C:\Users\milas\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\milas\.m2\repository\org\junit\platform\junit-platform-commons\1.9.0\junit-platform-commons-1.9.0.jar;C:\Users\milas\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.0\junit-jupiter-params-5.9.0.jar;C:\Users\milas\.m2\repository\org\junit\platform\junit-platform-launcher\1.9.0\junit-platform-launcher-1.9.0.jar;C:\Users\milas\.m2\repository\org\slf4j\slf4j-simple\1.7.36\slf4j-simple-1.7.36.jar;C:\Users\milas\.m2\repository\org\apache\bcel\bcel\6.6.1\bcel-6.6.1.jar;C:\Users\milas\.m2\repository\ch\qos\logback\logback-classic\1.4.4\logback-classic-1.4.4.jar;C:\Users\milas\.m2\repository\ch\qos\logback\logback-core\1.4.4\logback-core-1.4.4.jar;C:\Users\milas\.m2\repository\org\mockito\mockito-core\4.8.0\mockito-core-4.8.0.jar;C:\Users\milas\.m2\repository\net\bytebuddy\byte-buddy\1.12.14\byte-buddy-1.12.14.jar;C:\Users\milas\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.14\byte-buddy-agent-1.12.14.jar;C:\Users\milas\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\milas\.m2\repository\org\hamcrest\hamcrest-library\2.2\hamcrest-library-2.2.jar;C:\Users\milas\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\milas\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-java\4.23.0\selenium-java-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-api\4.23.0\selenium-api-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-chrome-driver\4.23.0\selenium-chrome-driver-4.23.0.jar;C:\Users\milas\.m2\repository\com\google\auto\service\auto-service-annotations\1.1.1\auto-service-annotations-1.1.1.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-chromium-driver\4.23.0\selenium-chromium-driver-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-json\4.23.0\selenium-json-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-manager\4.23.0\selenium-manager-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-devtools-v125\4.23.0\selenium-devtools-v125-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-devtools-v126\4.23.0\selenium-devtools-v126-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-devtools-v127\4.23.0\selenium-devtools-v127-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-devtools-v85\4.23.0\selenium-devtools-v85-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-edge-driver\4.23.0\selenium-edge-driver-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\4.23.0\selenium-firefox-driver-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-http\4.23.0\selenium-http-4.23.0.jar;C:\Users\milas\.m2\repository\dev\failsafe\failsafe\3.3.2\failsafe-3.3.2.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-ie-driver\4.23.0\selenium-ie-driver-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\4.23.0\selenium-remote-driver-4.23.0.jar;C:\Users\milas\.m2\repository\com\google\guava\guava\33.2.1-jre\guava-33.2.1-jre.jar;C:\Users\milas\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\milas\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\milas\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\milas\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\milas\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\semconv\opentelemetry-semconv\1.25.0-alpha\opentelemetry-semconv-1.25.0-alpha.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-api\1.40.0\opentelemetry-api-1.40.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-context\1.40.0\opentelemetry-context-1.40.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-exporter-logging\1.40.0\opentelemetry-exporter-logging-1.40.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-sdk-common\1.40.0\opentelemetry-sdk-common-1.40.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-sdk-extension-autoconfigure-spi\1.40.0\opentelemetry-sdk-extension-autoconfigure-spi-1.40.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-sdk-extension-autoconfigure\1.40.0\opentelemetry-sdk-extension-autoconfigure-1.40.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-api-incubator\1.40.0-alpha\opentelemetry-api-incubator-1.40.0-alpha.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-sdk-trace\1.40.0\opentelemetry-sdk-trace-1.40.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-sdk\1.40.0\opentelemetry-sdk-1.40.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-sdk-metrics\1.40.0\opentelemetry-sdk-metrics-1.40.0.jar;C:\Users\milas\.m2\repository\io\opentelemetry\opentelemetry-sdk-logs\1.40.0\opentelemetry-sdk-logs-1.40.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-os\4.23.0\selenium-os-4.23.0.jar;C:\Users\milas\.m2\repository\org\apache\commons\commons-exec\1.4.0\commons-exec-1.4.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-safari-driver\4.23.0\selenium-safari-driver-4.23.0.jar;C:\Users\milas\.m2\repository\org\seleniumhq\selenium\selenium-support\4.23.0\selenium-support-4.23.0.jar;C:\Users\milas\.m2\repository\io\github\bonigarcia\webdrivermanager\5.9.2\webdrivermanager-5.9.2.jar;C:\Users\milas\.m2\repository\com\google\code\gson\gson\2.11.0\gson-2.11.0.jar;C:\Users\milas\.m2\repository\com\google\errorprone\error_prone_annotations\2.27.0\error_prone_annotations-2.27.0.jar;C:\Users\milas\.m2\repository\com\github\docker-java\docker-java\3.4.0\docker-java-3.4.0.jar;C:\Users\milas\.m2\repository\com\github\docker-java\docker-java-core\3.4.0\docker-java-core-3.4.0.jar;C:\Users\milas\.m2\repository\com\github\docker-java\docker-java-api\3.4.0\docker-java-api-3.4.0.jar;C:\Users\milas\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.30\jcl-over-slf4j-1.7.30.jar;C:\Users\milas\.m2\repository\com\github\docker-java\docker-java-transport-httpclient5\3.4.0\docker-java-transport-httpclient5-3.4.0.jar;C:\Users\milas\.m2\repository\com\github\docker-java\docker-java-transport\3.4.0\docker-java-transport-3.4.0.jar;C:\Users\milas\.m2\repository\net\java\dev\jna\jna\5.13.0\jna-5.13.0.jar;C:\Users\milas\.m2\repository\org\brotli\dec\0.1.2\dec-0.1.2.jar;C:\Users\milas\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.2.1\httpclient5-5.2.1.jar;C:\Users\milas\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2\httpcore5-5.2.jar;C:\Users\milas\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2\httpcore5-h2-5.2.jar;C:\Users\milas\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.12.3\jackson-databind-2.12.3.jar;C:\Users\milas\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.12.3\jackson-annotations-2.12.3.jar;C:\Users\milas\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.12.3\jackson-core-2.12.3.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\milas"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2021-10-19"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-17.0.1"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="D:\Java\ta_training-java\AutomatedTesting"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\milas\AppData\Local\Temp\surefire14975596003921228554\surefirebooter3504674614464565468.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.1+12-LTS-39"/>
    <property name="user.name" value="milas"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\milas\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\milas\AppData\Local\Temp\"/>
    <property name="idea.version" value="2022.1.2"/>
    <property name="java.version" value="17.0.1"/>
    <property name="user.dir" value="D:\Java\ta_training-java\AutomatedTesting"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-17.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\Cloudflare\Cloudflare WARP;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\dotnet\;C:\PostgreSQL\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\apache-maven-3.8.6\bin;C:\Program Files\Java\jdk-17.0.1\bin;C:\Program Files\Calibre2\;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\nodejs\;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\milas\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\bin;C:\Program Files\JetBrains\PyCharm Community Edition 2022.2.4\bin;C:\Users\milas\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Java\jdk-17.0.1\bin;C:\Program Files\JetBrains\IntelliJ IDEA 2023.2.2\bin;C:\Users\milas\AppData\Local\gitkraken\bin;C:\Users\milas\AppData\Roaming\npm;C:\Java\drivers\;;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="17.0.1+12-LTS-39"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="testComplianceFori" classname="com.epam.rd.autotasks.collections.map.ComplianceTest" time="0.151">
    <failure message="Only foreach and while loops are allowed in this project but was: [for (int i = 0; i &lt; array.length; i++) {&#10;    if (array[i] == biggestValue) {&#10;        if (firstIndexValue == (-1)) {&#10;            firstIndexValue = i;&#10;        }&#10;        lastIndexValue = i;&#10;    }&#10;}, for (int i = 0; i &lt; n; i++) {&#10;    for (int j = 0; j &lt; n; j++) {&#10;        if (j &lt; i) {&#10;            matrix[i][j] = 0;&#10;        } else if (j &gt; i) {&#10;            matrix[i][j] = 1;&#10;        }&#10;    }&#10;}, for (int j = 0; j &lt; n; j++) {&#10;    if (j &lt; i) {&#10;        matrix[i][j] = 0;&#10;    } else if (j &gt; i) {&#10;        matrix[i][j] = 1;&#10;    }&#10;}, for (int i = 0; i &lt; (length / 2); i++) {&#10;    int j = (length - 1) - i;&#10;    if (((array[i] % 2) == 0) &amp;&amp; ((array[j] % 2) == 0)) {&#10;        int temp = array[i];&#10;        array[i] = array[j];&#10;        array[j] = temp;&#10;    }&#10;}, for (int i = 1; i &lt; array.length; i++) {&#10;    if (order == com.epam.training.student_viktor_tovarnykh.classes.main_task2.SortOrder.ASC) {&#10;        if (array[i] &lt; array[i - 1]) {&#10;            return false;&#10;        }&#10;    } else if (order == com.epam.training.student_viktor_tovarnykh.classes.main_task2.SortOrder.DESC) {&#10;        if (array[i] &gt; array[i - 1]) {&#10;            return false;&#10;        }&#10;    }&#10;}, for (int i = 0; i &lt; array.length; i++) {&#10;    transformedArray[i] = array[i] + i;&#10;}, for (int i = 0; i &lt; n; i++) {&#10;    java.lang.System.out.printf(com.epam.training.student_viktor_tovarnykh.classes.main_task2.Main.MESSAGE_INPUT_ARRAY_ELEMENT, i);&#10;    array[i] = com.epam.training.student_viktor_tovarnykh.classes.main_task2.Main.input.nextInt();&#10;}, for (int i = 0; i &lt; n; i++) {&#10;    result = result * current;&#10;    current = current + t;&#10;}, for (int i = 0; i &lt; n; i++) {&#10;    java.lang.System.out.printf(com.epam.training.student_viktor_tovarnykh.classes.main_task3.Main.MESSAGE_INPUT_ARRAY_ELEMENT, i);&#10;    array[i] = com.epam.training.student_viktor_tovarnykh.classes.main_task3.Main.input.nextInt();&#10;}, for (int i = 0; i &lt; n; i++) {&#10;    java.lang.System.out.printf(com.epam.training.student_viktor_tovarnykh.classes.main_task4.Main.MESSAGE_INPUT_ARRAY_ELEMENT, i);&#10;    array[i] = com.epam.training.student_viktor_tovarnykh.classes.main_task4.Main.input.nextInt();&#10;}, for (int i = 0; i &lt; rectangleArray.length; i++) {&#10;    if (rectangleArray[i] == null) {&#10;        rectangleArray[i] = new com.epam.training.student_viktor_tovarnykh.classes.main_task5.Rectangle();&#10;        return true;&#10;    }&#10;}, for (int i = 0; i &lt; rectangleArray.length; i++) {&#10;    if (rectangleArray[i].area() == max) {&#10;        maxInd = i;&#10;        break;&#10;    }&#10;}, for (int j = 1; j &lt; rectangleArray.length; j++) {&#10;    if (rectangleArray[j].perimeter() &lt; min) {&#10;        min = rectangleArray[j].perimeter();&#10;    }&#10;}, for (int i = 0; i &lt; rectangleArray.length; i++) {&#10;    if (rectangleArray[i].perimeter() == min) {&#10;        minInd = i;&#10;        break;&#10;    }&#10;}, for (int i = 1; i &lt; array.length; i++) {&#10;    if (order == com.epam.training.student_viktor_tovarnykh.classes.main_task.SortOrder.ASC) {&#10;        if (array[i] &lt; array[i - 1]) {&#10;            return false;&#10;        }&#10;    } else if (order == com.epam.training.student_viktor_tovarnykh.classes.main_task.SortOrder.DESC) {&#10;        if (array[i] &gt; array[i - 1]) {&#10;            return false;&#10;        }&#10;    }&#10;}, for (int i = 0; i &lt; n; i++) {&#10;    java.lang.System.out.printf(com.epam.training.student_viktor_tovarnykh.classes.main_task.Main.MESSAGE_INPUT_ARRAY_ELEMENT, i);&#10;    array[i] = com.epam.training.student_viktor_tovarnykh.classes.main_task.Main.input.nextInt();&#10;}, for (int i = 0; i &lt; size; i++) {&#10;    if (elements[i].equals(el)) {&#10;        java.lang.Object removed = elements[i];&#10;        java.lang.System.arraycopy(elements, i + 1, elements, i, (size - i) - 1);&#10;        elements[size - 1] = null;&#10;        size--;&#10;        return java.util.Optional.of(removed);&#10;    }&#10;}, for (int i = 0; i &lt; size; i++) {&#10;    stringBuilder.append(elements[i]);&#10;    if (i &lt; (size - 1)) {&#10;        stringBuilder.append(&quot;, &quot;);&#10;    }&#10;}, for (int i = 0; i &lt; index; i++) {&#10;    if (current == null) {&#10;        return null;&#10;    }&#10;    current = current.next;&#10;}, for (int i = 0; i &lt; projectEntries.size(); i++) {&#10;    for (int j = 0; j &lt; teamEntries.size(); j++) {&#10;        if (projectEntries.get(i).equals(teamEntries.get(j))) {&#10;            projectEntries.remove(projectEntries.get(i));&#10;            teamEntries.remove(teamEntries.get(j));&#10;            i = 0;&#10;            j = -1;&#10;        }&#10;    }&#10;}, for (int j = 0; j &lt; teamEntries.size(); j++) {&#10;    if (projectEntries.get(i).equals(teamEntries.get(j))) {&#10;        projectEntries.remove(projectEntries.get(i));&#10;        teamEntries.remove(teamEntries.get(j));&#10;        i = 0;&#10;        j = -1;&#10;    }&#10;}, for (int i = 0; i &lt; (values.length - 1); i++) {&#10;    if (values[i].length != values[i + 1].length) {&#10;        throw new com.epam.training.student_viktor_tovarnykh.exceptions.main_task.MatrixException(&quot;Bad size of matrix&quot;);&#10;    }&#10;}, for (int r = 0; r &lt; addMatrix.getRows(); r++) {&#10;    for (int l = 0; l &lt; addMatrix.getColumns(); l++) {&#10;        addMatrix.set(r, l, this.get(r, l) + other.get(r, l));&#10;    }&#10;}, for (int l = 0; l &lt; addMatrix.getColumns(); l++) {&#10;    addMatrix.set(r, l, this.get(r, l) + other.get(r, l));&#10;}, for (int r = 0; r &lt; subtractMatrix.getRows(); r++) {&#10;    for (int l = 0; l &lt; subtractMatrix.getColumns(); l++) {&#10;        subtractMatrix.set(r, l, this.get(r, l) - other.get(r, l));&#10;    }&#10;}, for (int l = 0; l &lt; subtractMatrix.getColumns(); l++) {&#10;    subtractMatrix.set(r, l, this.get(r, l) - other.get(r, l));&#10;}, for (int i = 0; i &lt; this.getRows(); i++) {&#10;    for (int j = 0; j &lt; other.getColumns(); j++) {&#10;        for (int k = 0; k &lt; other.getRows(); k++) {&#10;            tempArray[i][j] += this.values[i][k] * other.get(k, j);&#10;        }&#10;    }&#10;}, for (int j = 0; j &lt; other.getColumns(); j++) {&#10;    for (int k = 0; k &lt; other.getRows(); k++) {&#10;        tempArray[i][j] += this.values[i][k] * other.get(k, j);&#10;    }&#10;}, for (int k = 0; k &lt; other.getRows(); k++) {&#10;    tempArray[i][j] += this.values[i][k] * other.get(k, j);&#10;}, for (int i = 0; i &lt; deposits.length; i++) {&#10;    if (deposits[i] == null) {&#10;        deposits[i] = deposit;&#10;        return true;&#10;    }&#10;}, for (int i = 0; i &lt; deposits.length; i++) {&#10;    if (deposits[i] != null) {&#10;        if (deposits[i].income().compareTo(myIncome) &gt; 0) {&#10;            myIncome = deposits[i].income();&#10;        }&#10;    }&#10;}, for (int i = 0; i &lt; deposits.length; i++) {&#10;    if (deposits[i] != null) {&#10;        if (i == number) {&#10;            result = deposits[i].income();&#10;        }&#10;    }&#10;}, for (int i = 0; i &lt; deposits.length; i++) {&#10;    if (deposits[i] != null) {&#10;        counter++;&#10;    } else {&#10;        break;&#10;    }&#10;}, for (int i = 0; i &lt; tempArr.length; i++) {&#10;    tempArr[i] = deposits[i];&#10;}, for (int i = 0; i &lt; (tempArr.length - 1); i++) {&#10;    if (tempArr[i].totalIncome().compareTo(tempArr[i + 1].totalIncome()) == (-1)) {&#10;        dep = tempArr[i];&#10;        tempArr[i] = tempArr[i + 1];&#10;        tempArr[i + 1] = dep;&#10;        needIter = true;&#10;    } else {&#10;        continue;&#10;    }&#10;}, for (int i = 1; i &lt;= period; i++) {&#10;    if (i &lt;= 6) {&#10;        continue;&#10;    } else {&#10;        inc = inc.add(inc.multiply(java.math.BigDecimal.valueOf(0.15)));&#10;    }&#10;}, for (int i = 1; i &lt;= period; i++) {&#10;    p = i;&#10;    percent = p * 0.01;&#10;    inc = inc.add(inc.multiply(java.math.BigDecimal.valueOf(percent)));&#10;}, for (int i = 1; i &lt;= period; i++) {&#10;    java.math.BigDecimal p = new java.math.BigDecimal(&quot;1.05&quot;);&#10;    currentAmount = amount.multiply(p.pow(period));&#10;}, for (int i = 0; i &lt; deposits.length; i++) {&#10;    if (deposits[i] == null) {&#10;        deposits[i] = deposit;&#10;        return true;&#10;    }&#10;}, for (int i = 0; i &lt; deposits.length; i++) {&#10;    if (deposits[i] != null) {&#10;        if (deposits[i].income().compareTo(myIncome) &gt; 0) {&#10;            myIncome = deposits[i].income();&#10;        }&#10;    }&#10;}, for (int i = 0; i &lt; deposits.length; i++) {&#10;    if (deposits[i] != null) {&#10;        if (i == number) {&#10;            result = deposits[i].income();&#10;        }&#10;    }&#10;}, for (int i = 1; i &lt;= period; i++) {&#10;    if (i &lt;= 6) {&#10;        continue;&#10;    } else {&#10;        inc = inc.add(inc.multiply(java.math.BigDecimal.valueOf(0.15)));&#10;    }&#10;}, for (int i = 1; i &lt;= period; i++) {&#10;    p = i;&#10;    percent = p * 0.01;&#10;    inc = inc.add(inc.multiply(java.math.BigDecimal.valueOf(percent)));&#10;}, for (int i = 0; i &lt; n; i++) {&#10;    sum += previousNumber;&#10;    int nextNumber = previousNumber + currentNumber;&#10;    previousNumber = currentNumber;&#10;    currentNumber = nextNumber;&#10;}, for (int j = 0; j &lt; numberOfEmail; j++) {&#10;    output[i++] = emails[j];&#10;}, for (int j = 0; j &lt; numberOfSocials; j++) {&#10;    output[i++] = socialMedias[j];&#10;}] ==&gt; expected: &lt;true&gt; but was: &lt;false&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: 
Only foreach and while loops are allowed in this project but was: [for (int i = 0; i < array.length; i++) {
    if (array[i] == biggestValue) {
        if (firstIndexValue == (-1)) {
            firstIndexValue = i;
        }
        lastIndexValue = i;
    }
}, for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
        if (j < i) {
            matrix[i][j] = 0;
        } else if (j > i) {
            matrix[i][j] = 1;
        }
    }
}, for (int j = 0; j < n; j++) {
    if (j < i) {
        matrix[i][j] = 0;
    } else if (j > i) {
        matrix[i][j] = 1;
    }
}, for (int i = 0; i < (length / 2); i++) {
    int j = (length - 1) - i;
    if (((array[i] % 2) == 0) && ((array[j] % 2) == 0)) {
        int temp = array[i];
        array[i] = array[j];
        array[j] = temp;
    }
}, for (int i = 1; i < array.length; i++) {
    if (order == com.epam.training.student_viktor_tovarnykh.classes.main_task2.SortOrder.ASC) {
        if (array[i] < array[i - 1]) {
            return false;
        }
    } else if (order == com.epam.training.student_viktor_tovarnykh.classes.main_task2.SortOrder.DESC) {
        if (array[i] > array[i - 1]) {
            return false;
        }
    }
}, for (int i = 0; i < array.length; i++) {
    transformedArray[i] = array[i] + i;
}, for (int i = 0; i < n; i++) {
    java.lang.System.out.printf(com.epam.training.student_viktor_tovarnykh.classes.main_task2.Main.MESSAGE_INPUT_ARRAY_ELEMENT, i);
    array[i] = com.epam.training.student_viktor_tovarnykh.classes.main_task2.Main.input.nextInt();
}, for (int i = 0; i < n; i++) {
    result = result * current;
    current = current + t;
}, for (int i = 0; i < n; i++) {
    java.lang.System.out.printf(com.epam.training.student_viktor_tovarnykh.classes.main_task3.Main.MESSAGE_INPUT_ARRAY_ELEMENT, i);
    array[i] = com.epam.training.student_viktor_tovarnykh.classes.main_task3.Main.input.nextInt();
}, for (int i = 0; i < n; i++) {
    java.lang.System.out.printf(com.epam.training.student_viktor_tovarnykh.classes.main_task4.Main.MESSAGE_INPUT_ARRAY_ELEMENT, i);
    array[i] = com.epam.training.student_viktor_tovarnykh.classes.main_task4.Main.input.nextInt();
}, for (int i = 0; i < rectangleArray.length; i++) {
    if (rectangleArray[i] == null) {
        rectangleArray[i] = new com.epam.training.student_viktor_tovarnykh.classes.main_task5.Rectangle();
        return true;
    }
}, for (int i = 0; i < rectangleArray.length; i++) {
    if (rectangleArray[i].area() == max) {
        maxInd = i;
        break;
    }
}, for (int j = 1; j < rectangleArray.length; j++) {
    if (rectangleArray[j].perimeter() < min) {
        min = rectangleArray[j].perimeter();
    }
}, for (int i = 0; i < rectangleArray.length; i++) {
    if (rectangleArray[i].perimeter() == min) {
        minInd = i;
        break;
    }
}, for (int i = 1; i < array.length; i++) {
    if (order == com.epam.training.student_viktor_tovarnykh.classes.main_task.SortOrder.ASC) {
        if (array[i] < array[i - 1]) {
            return false;
        }
    } else if (order == com.epam.training.student_viktor_tovarnykh.classes.main_task.SortOrder.DESC) {
        if (array[i] > array[i - 1]) {
            return false;
        }
    }
}, for (int i = 0; i < n; i++) {
    java.lang.System.out.printf(com.epam.training.student_viktor_tovarnykh.classes.main_task.Main.MESSAGE_INPUT_ARRAY_ELEMENT, i);
    array[i] = com.epam.training.student_viktor_tovarnykh.classes.main_task.Main.input.nextInt();
}, for (int i = 0; i < size; i++) {
    if (elements[i].equals(el)) {
        java.lang.Object removed = elements[i];
        java.lang.System.arraycopy(elements, i + 1, elements, i, (size - i) - 1);
        elements[size - 1] = null;
        size--;
        return java.util.Optional.of(removed);
    }
}, for (int i = 0; i < size; i++) {
    stringBuilder.append(elements[i]);
    if (i < (size - 1)) {
        stringBuilder.append(", ");
    }
}, for (int i = 0; i < index; i++) {
    if (current == null) {
        return null;
    }
    current = current.next;
}, for (int i = 0; i < projectEntries.size(); i++) {
    for (int j = 0; j < teamEntries.size(); j++) {
        if (projectEntries.get(i).equals(teamEntries.get(j))) {
            projectEntries.remove(projectEntries.get(i));
            teamEntries.remove(teamEntries.get(j));
            i = 0;
            j = -1;
        }
    }
}, for (int j = 0; j < teamEntries.size(); j++) {
    if (projectEntries.get(i).equals(teamEntries.get(j))) {
        projectEntries.remove(projectEntries.get(i));
        teamEntries.remove(teamEntries.get(j));
        i = 0;
        j = -1;
    }
}, for (int i = 0; i < (values.length - 1); i++) {
    if (values[i].length != values[i + 1].length) {
        throw new com.epam.training.student_viktor_tovarnykh.exceptions.main_task.MatrixException("Bad size of matrix");
    }
}, for (int r = 0; r < addMatrix.getRows(); r++) {
    for (int l = 0; l < addMatrix.getColumns(); l++) {
        addMatrix.set(r, l, this.get(r, l) + other.get(r, l));
    }
}, for (int l = 0; l < addMatrix.getColumns(); l++) {
    addMatrix.set(r, l, this.get(r, l) + other.get(r, l));
}, for (int r = 0; r < subtractMatrix.getRows(); r++) {
    for (int l = 0; l < subtractMatrix.getColumns(); l++) {
        subtractMatrix.set(r, l, this.get(r, l) - other.get(r, l));
    }
}, for (int l = 0; l < subtractMatrix.getColumns(); l++) {
    subtractMatrix.set(r, l, this.get(r, l) - other.get(r, l));
}, for (int i = 0; i < this.getRows(); i++) {
    for (int j = 0; j < other.getColumns(); j++) {
        for (int k = 0; k < other.getRows(); k++) {
            tempArray[i][j] += this.values[i][k] * other.get(k, j);
        }
    }
}, for (int j = 0; j < other.getColumns(); j++) {
    for (int k = 0; k < other.getRows(); k++) {
        tempArray[i][j] += this.values[i][k] * other.get(k, j);
    }
}, for (int k = 0; k < other.getRows(); k++) {
    tempArray[i][j] += this.values[i][k] * other.get(k, j);
}, for (int i = 0; i < deposits.length; i++) {
    if (deposits[i] == null) {
        deposits[i] = deposit;
        return true;
    }
}, for (int i = 0; i < deposits.length; i++) {
    if (deposits[i] != null) {
        if (deposits[i].income().compareTo(myIncome) > 0) {
            myIncome = deposits[i].income();
        }
    }
}, for (int i = 0; i < deposits.length; i++) {
    if (deposits[i] != null) {
        if (i == number) {
            result = deposits[i].income();
        }
    }
}, for (int i = 0; i < deposits.length; i++) {
    if (deposits[i] != null) {
        counter++;
    } else {
        break;
    }
}, for (int i = 0; i < tempArr.length; i++) {
    tempArr[i] = deposits[i];
}, for (int i = 0; i < (tempArr.length - 1); i++) {
    if (tempArr[i].totalIncome().compareTo(tempArr[i + 1].totalIncome()) == (-1)) {
        dep = tempArr[i];
        tempArr[i] = tempArr[i + 1];
        tempArr[i + 1] = dep;
        needIter = true;
    } else {
        continue;
    }
}, for (int i = 1; i <= period; i++) {
    if (i <= 6) {
        continue;
    } else {
        inc = inc.add(inc.multiply(java.math.BigDecimal.valueOf(0.15)));
    }
}, for (int i = 1; i <= period; i++) {
    p = i;
    percent = p * 0.01;
    inc = inc.add(inc.multiply(java.math.BigDecimal.valueOf(percent)));
}, for (int i = 1; i <= period; i++) {
    java.math.BigDecimal p = new java.math.BigDecimal("1.05");
    currentAmount = amount.multiply(p.pow(period));
}, for (int i = 0; i < deposits.length; i++) {
    if (deposits[i] == null) {
        deposits[i] = deposit;
        return true;
    }
}, for (int i = 0; i < deposits.length; i++) {
    if (deposits[i] != null) {
        if (deposits[i].income().compareTo(myIncome) > 0) {
            myIncome = deposits[i].income();
        }
    }
}, for (int i = 0; i < deposits.length; i++) {
    if (deposits[i] != null) {
        if (i == number) {
            result = deposits[i].income();
        }
    }
}, for (int i = 1; i <= period; i++) {
    if (i <= 6) {
        continue;
    } else {
        inc = inc.add(inc.multiply(java.math.BigDecimal.valueOf(0.15)));
    }
}, for (int i = 1; i <= period; i++) {
    p = i;
    percent = p * 0.01;
    inc = inc.add(inc.multiply(java.math.BigDecimal.valueOf(percent)));
}, for (int i = 0; i < n; i++) {
    sum += previousNumber;
    int nextNumber = previousNumber + currentNumber;
    previousNumber = currentNumber;
    currentNumber = nextNumber;
}, for (int j = 0; j < numberOfEmail; j++) {
    output[i++] = emails[j];
}, for (int j = 0; j < numberOfSocials; j++) {
    output[i++] = socialMedias[j];
}] ==> expected: <true> but was: <false>
	at com.epam.rd.autotasks.collections.map.ComplianceTest.testComplianceFori(ComplianceTest.java:173)
]]></failure>
  </testcase>
  <testcase name="testComplianceLambda" classname="com.epam.rd.autotasks.collections.map.ComplianceTest" time="0.014">
    <failure message="Lambdas are not allowed in this project but was: [(acc, digit) -&gt; (acc * 10) + digit] ==&gt; expected: &lt;true&gt; but was: &lt;false&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: Lambdas are not allowed in this project but was: [(acc, digit) -> (acc * 10) + digit] ==> expected: <true> but was: <false>
	at com.epam.rd.autotasks.collections.map.ComplianceTest.testComplianceLambda(ComplianceTest.java:165)
]]></failure>
  </testcase>
  <testcase name="testNoMorePublicMethods" classname="com.epam.rd.autotasks.collections.map.ComplianceTest" time="0.029"/>
  <testcase name="testNoArrays" classname="com.epam.rd.autotasks.collections.map.ComplianceTest" time="0.055">
    <failure message="You must not use arrays but found: [int[] array = null, int[] array = new int[]{  }, int[] array = new int[]{ 4, 100, 3, 4 }, int[] array = new int[]{ 5, 50, 50, 4, 5 }, int[] array = new int[]{ 5, 350, 350, 4, 350 }, int[] array = new int[]{ 10, 10, 10, 10, 10 }, int[] row, int[][] matrix = null, int[][] matrix = new int[][]{  }, int[][] matrix = new int[][]{ new int[]{  } }, int[][] matrix = new int[][]{ new int[]{  }, new int[]{  } }, int[][] matrix = new int[][]{ new int[]{ 2, 3 }, new int[]{ 4, 5, 6 } }, int[][] matrix = new int[][]{ new int[]{ 2, 3 }, new int[]{ 4, 5 }, new int[]{  } }, int[][] matrix = new int[][]{ new int[]{ 2, 3 }, new int[]{ 4, 5 } }, int[][] matrix = new int[][]{ new int[]{ 2, 4, 3, 3 }, new int[]{ 5, 7, 8, 5 }, new int[]{ 2, 4, 3, 3 }, new int[]{ 5, 7, 8, 5 } }, int[][] matrix = new int[][]{ new int[]{ 2, 3 }, new int[]{ 4, 5 }, new int[]{ 6, 7 } }, int[][] matrix = new int[][]{ new int[]{ 2, 4, 3, 3 }, new int[]{ 5, 7, 8, 5 }, new int[]{ 2, 4, 3, 3 } }, int[] array = null, int[] array = new int[]{  }, int[] array = new int[]{ 10, 5, 3, 4 }, int[] array = new int[]{ 100, 2, 3, 4, 5 }, int[] array = new int[]{ 100, 2, 3, 45, 33, 8, 4, 54 }, int[] transformedArray = new int[array.length], int[] array = com.epam.training.student_viktor_tovarnykh.classes.main_task2.Main.getArray(), int[] array = new int[n], int[] array = com.epam.training.student_viktor_tovarnykh.classes.main_task3.Main.getArray(), int[] array = new int[n], int[] array = com.epam.training.student_viktor_tovarnykh.classes.main_task4.Main.getArray(), int[] array = new int[n], private final com.epam.training.student_viktor_tovarnykh.classes.main_task5.Rectangle[] rectangleArray;, int[] array = com.epam.training.student_viktor_tovarnykh.classes.main_task.Main.getArray(), int[] array = new int[n], private java.lang.Object[] elements;, java.lang.Object[] newArray = new java.lang.Object[newCapacity], java.lang.Object[] newArray = new java.lang.Object[newCapacity], java.lang.Object[] result = new java.lang.Object[size()], private final double[][] values;, double[][] tempArray = new double[this.getRows()][other.getColumns()], private com.epam.training.student_viktor_tovarnykh.interfaces.main_task2.Deposit[] deposits;, com.epam.training.student_viktor_tovarnykh.interfaces.main_task2.Deposit[] tempArr = new com.epam.training.student_viktor_tovarnykh.interfaces.main_task2.Deposit[counter], private final com.epam.training.student_viktor_tovarnykh.interfaces.main_task.Deposit[] deposits;, private final com.epam.training.student_viktor_tovarnykh.nestedclasses.main_task.Contact.Email[] emails = new com.epam.training.student_viktor_tovarnykh.nestedclasses.main_task.Contact.Email[3];, private final com.epam.training.student_viktor_tovarnykh.nestedclasses.main_task.Contact.Social[] socialMedias = new com.epam.training.student_viktor_tovarnykh.nestedclasses.main_task.Contact.Social[5];, com.epam.training.student_viktor_tovarnykh.nestedclasses.main_task.ContactInfo[] output = new com.epam.training.student_viktor_tovarnykh.nestedclasses.main_task.ContactInfo[length], private final com.epam.training.student_viktor_tovarnykh.oop.main_task.Employee[] employees;, java.lang.String[] words = new java.lang.String[]{ &quot; WordS    \t&quot;, &quot;words&quot;, &quot;w0rds&quot;, &quot;WOR  DS&quot; }, java.lang.String[] splitResult = com.epam.training.student_viktor_tovarnykh.strings.main_task.StringUtil.splitWords(text), java.lang.String[] expectedSplit = new java.lang.String[]{ &quot;first&quot;, &quot;second&quot;, &quot;third&quot; }, java.lang.String[] toJoin = new java.lang.String[]{ &quot;go&quot;, &quot;with&quot;, &quot;the&quot;, &quot;&quot;, &quot;FLOW&quot; }] ==&gt; expected: &lt;0&gt; but was: &lt;49&gt;" type="org.opentest4j.AssertionFailedError"><![CDATA[org.opentest4j.AssertionFailedError: You must not use arrays but found: [int[] array = null, int[] array = new int[]{  }, int[] array = new int[]{ 4, 100, 3, 4 }, int[] array = new int[]{ 5, 50, 50, 4, 5 }, int[] array = new int[]{ 5, 350, 350, 4, 350 }, int[] array = new int[]{ 10, 10, 10, 10, 10 }, int[] row, int[][] matrix = null, int[][] matrix = new int[][]{  }, int[][] matrix = new int[][]{ new int[]{  } }, int[][] matrix = new int[][]{ new int[]{  }, new int[]{  } }, int[][] matrix = new int[][]{ new int[]{ 2, 3 }, new int[]{ 4, 5, 6 } }, int[][] matrix = new int[][]{ new int[]{ 2, 3 }, new int[]{ 4, 5 }, new int[]{  } }, int[][] matrix = new int[][]{ new int[]{ 2, 3 }, new int[]{ 4, 5 } }, int[][] matrix = new int[][]{ new int[]{ 2, 4, 3, 3 }, new int[]{ 5, 7, 8, 5 }, new int[]{ 2, 4, 3, 3 }, new int[]{ 5, 7, 8, 5 } }, int[][] matrix = new int[][]{ new int[]{ 2, 3 }, new int[]{ 4, 5 }, new int[]{ 6, 7 } }, int[][] matrix = new int[][]{ new int[]{ 2, 4, 3, 3 }, new int[]{ 5, 7, 8, 5 }, new int[]{ 2, 4, 3, 3 } }, int[] array = null, int[] array = new int[]{  }, int[] array = new int[]{ 10, 5, 3, 4 }, int[] array = new int[]{ 100, 2, 3, 4, 5 }, int[] array = new int[]{ 100, 2, 3, 45, 33, 8, 4, 54 }, int[] transformedArray = new int[array.length], int[] array = com.epam.training.student_viktor_tovarnykh.classes.main_task2.Main.getArray(), int[] array = new int[n], int[] array = com.epam.training.student_viktor_tovarnykh.classes.main_task3.Main.getArray(), int[] array = new int[n], int[] array = com.epam.training.student_viktor_tovarnykh.classes.main_task4.Main.getArray(), int[] array = new int[n], private final com.epam.training.student_viktor_tovarnykh.classes.main_task5.Rectangle[] rectangleArray;, int[] array = com.epam.training.student_viktor_tovarnykh.classes.main_task.Main.getArray(), int[] array = new int[n], private java.lang.Object[] elements;, java.lang.Object[] newArray = new java.lang.Object[newCapacity], java.lang.Object[] newArray = new java.lang.Object[newCapacity], java.lang.Object[] result = new java.lang.Object[size()], private final double[][] values;, double[][] tempArray = new double[this.getRows()][other.getColumns()], private com.epam.training.student_viktor_tovarnykh.interfaces.main_task2.Deposit[] deposits;, com.epam.training.student_viktor_tovarnykh.interfaces.main_task2.Deposit[] tempArr = new com.epam.training.student_viktor_tovarnykh.interfaces.main_task2.Deposit[counter], private final com.epam.training.student_viktor_tovarnykh.interfaces.main_task.Deposit[] deposits;, private final com.epam.training.student_viktor_tovarnykh.nestedclasses.main_task.Contact.Email[] emails = new com.epam.training.student_viktor_tovarnykh.nestedclasses.main_task.Contact.Email[3];, private final com.epam.training.student_viktor_tovarnykh.nestedclasses.main_task.Contact.Social[] socialMedias = new com.epam.training.student_viktor_tovarnykh.nestedclasses.main_task.Contact.Social[5];, com.epam.training.student_viktor_tovarnykh.nestedclasses.main_task.ContactInfo[] output = new com.epam.training.student_viktor_tovarnykh.nestedclasses.main_task.ContactInfo[length], private final com.epam.training.student_viktor_tovarnykh.oop.main_task.Employee[] employees;, java.lang.String[] words = new java.lang.String[]{ " WordS    \t", "words", "w0rds", "WOR  DS" }, java.lang.String[] splitResult = com.epam.training.student_viktor_tovarnykh.strings.main_task.StringUtil.splitWords(text), java.lang.String[] expectedSplit = new java.lang.String[]{ "first", "second", "third" }, java.lang.String[] toJoin = new java.lang.String[]{ "go", "with", "the", "", "FLOW" }] ==> expected: <0> but was: <49>
	at com.epam.rd.autotasks.collections.map.ComplianceTest.testNoArrays(ComplianceTest.java:158)
]]></failure>
  </testcase>
  <testcase name="testNoMoreFieldsInImpl" classname="com.epam.rd.autotasks.collections.map.ComplianceTest" time="0.035"/>
</testsuite>